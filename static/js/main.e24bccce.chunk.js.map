{"version":3,"sources":["components/InputSlider/InputSlider.tsx","components/RateText/RateText.tsx","components/SliderLabel/SliderLabel.tsx","components/TextInput/TextInput.tsx","config/constants.tsx","components/PercentDestination/PercentDestination.tsx","context/DepositInputs.tsx","mocks/depositRanks.tsx","helpers/helpers.tsx","components/DeposinInputs/DepositInputs.tsx","components/InfoRow/InfoRow.tsx","components/IconTooltip/IconTooltip.tsx","components/ProfitDetails/ProfitDetails.tsx","components/Charts/Charts.tsx","components/DepositCharts/DepositCharts.tsx","components/DepositCalc/DepositCalc.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","container","display","flexDirection","alignItems","breakpoints","down","padding","slider","flexGrow","margin","paddingTop","InputSlider","value","handleChange","marks","rate","label","sliderOptions","valueDisplay","children","styles","Box","className","Slider","onChange","aria-labelledby","min","max","valueLabelDisplay","valueLabelFormat","xs","sm","Divider","useStyle","width","fontSize","fontWeight","minWidth","marginBottom","textAlign","alignSelf","RateText","Typography","root","paddingBottom","SliderLabel","component","input","TextInput","sum","handleInputChange","OutlinedInput","fullWidth","MAX_DEPOSIT_SUM","DEPOSIT","marginTop","buttonsContainer","marginRight","helperText","PercentDestination","destination","handlePercentDestination","isDeposit","justifyContent","Button","variant","color","onClick","startIcon","Deposit","duration","percent","monthly","withoutFirstMonth","longation","percentDestination","DepositContext","createContext","deposit","setContextValue","newDeposit","useDepositContext","useContext","rates","uahFormatter","number","Intl","NumberFormat","style","currency","format","decimalFormatter","stripNoneNumbers","string","replace","height","paddingRight","marginLeft","DepositInputs","mergeContextValue","field","normalizeSum","normalized","isNaN","getRateByDuration","e","length","event","target","parseInt","FormControlLabel","control","Checkbox","checked","newDestination","InfoRow","valueBold","centered","flex","ml","IconTooltip","useState","open","setOpen","Tooltip","title","setTimeout","ProfitDetails","pureProfit","purePercent","collapse","setCollapse","setDuration","header","cursor","bold","transform","arrow","animation","Collapse","in","Charts","monthlyTotal","profit","leftChartX","x0","x","rightChartX","totalIncome","totalRangeY","rangeY","firstBar","y","y0","secondBar","thirdBar","stackBy","data","DepositCharts","paddingLeft","mb","buttonContainer","roundTwoSigns","Math","round","sumProfit","Array","fill","reduce","acc","montlyProfit","raisedSum","tax","alert","minHeight","backgroundColor","paper","DepositCalc","Container","maxWidth","Paper","orientation","flexItem","App","setState","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e24bccce.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\r\nimport { Slider, Box, Divider } from '@material-ui/core';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n        alignItems: 'stretch',\r\n        padding: '20px 0'\r\n      }\r\n    },\r\n    slider: {\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n      margin: '0 20px',\r\n      padding: '20px 0',\r\n      [theme.breakpoints.down('xs')]: {\r\n        margin: 0,\r\n        paddingTop: 0\r\n      }\r\n    }\r\n  })\r\n)\r\n\r\ninterface Props {\r\n  value: number,\r\n  handleChange: (e: any, value: number | number[]) => void,\r\n  children?: ReactNode,\r\n  marks?: { value: number, label: string }[],\r\n  rate?: number,\r\n  label: ReactNode,\r\n  valueDisplay: 'on' | 'off',\r\n  sliderOptions: { min: number, max: number, 'aria-labelledby': string }\r\n}\r\n\r\nfunction InputSlider({ \r\n  value, handleChange, marks, rate, label, sliderOptions, valueDisplay, children=null \r\n}: Props) {\r\n\r\n  const styles = useStyles();\r\n  \r\n  const valueLabelFormat = () => rate;\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        className={styles.container}\r\n      >\r\n        {label}\r\n          <div className={styles.slider}>\r\n            <Slider \r\n              value={value} \r\n              onChange={handleChange}\r\n              aria-labelledby={sliderOptions['aria-labelledby']}\r\n              min={sliderOptions.min}\r\n              max={sliderOptions.max}\r\n              marks={marks}\r\n              valueLabelDisplay={valueDisplay}\r\n              valueLabelFormat={valueLabelFormat}\r\n            />\r\n          </div>\r\n          {children}\r\n      </Box>\r\n      <Box display={{ xs: 'block', sm: 'none' }}>\r\n        <Divider />\r\n      </Box>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InputSlider\r\n","import React from 'react'\r\nimport { Typography } from '@material-ui/core';\r\nimport { Theme, makeStyles, createStyles } from '@material-ui/core/styles'; \r\n\r\nconst useStyle = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    rate: {\r\n      width: 100,\r\n      fontSize: 20,\r\n      fontWeight: 800,\r\n      minWidth: '60px',\r\n      marginBottom: 20,\r\n      textAlign: 'center',\r\n      alignSelf: 'center',\r\n      [theme.breakpoints.down('xs')]: {\r\n        marginBottom: 0\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\ninterface RateTextProps {\r\n  rate: string\r\n}\r\n\r\nfunction RateText({ rate }: RateTextProps) {\r\n  const styles = useStyle();\r\n  return (\r\n    <Typography className={styles.rate}>\r\n      {rate}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport default RateText\r\n","import React from 'react'\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    root: {\r\n      width: 140,\r\n      paddingBottom: 10,\r\n      [theme.breakpoints.down('xs')]: {\r\n        paddingBottom: 30,\r\n        width: 'auto'\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\ninterface SliderLabelType {\r\n  label: string\r\n};\r\n\r\nfunction SliderLabel({ label }: SliderLabelType) {\r\n  const styles = useStyles();\r\n  return (\r\n    <Box className={styles.root}>\r\n      <Typography component='span'>\r\n        {label}\r\n      </Typography>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default SliderLabel\r\n","import React from 'react'\r\nimport { OutlinedInput, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles({\r\n  input: {\r\n    width: 100,\r\n    fontSize: 18,\r\n    alignSelf: 'center'\r\n  }\r\n})\r\ninterface Props {\r\n  sum: number,\r\n  handleInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\nfunction TextInput({ sum, handleInputChange }: Props ) {\r\n  const styles = useStyle();\r\n  return (\r\n    <OutlinedInput \r\n      className={styles.input}\r\n      value={sum}\r\n      fullWidth\r\n      onChange={handleInputChange}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TextInput\r\n","export const MAX_DEPOSIT_SUM = 1000000;\r\nexport const MAX_LONGATIONS = 5;\r\nexport const DEPOSIT = 'deposit';\r\nexport const DEPOSIT_TAX = 0.195;","import React from 'react'\r\nimport { Typography, Box, Button } from '@material-ui/core';\r\nimport { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Cash from '@material-ui/icons/AttachMoneySharp';\r\nimport Card from '@material-ui/icons/CreditCardSharp';\r\nimport { DEPOSIT } from '../../config/constants';\r\n\r\nconst useStyle = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      [theme.breakpoints.down('xs')]: {\r\n        marginTop: 20,\r\n        flexDirection: 'column'\r\n      },\r\n    },\r\n    label: {\r\n      width: 140,\r\n      [theme.breakpoints.down('xs')]: {\r\n        marginBottom: 20,\r\n        alignSelf: 'start'\r\n      }\r\n    },\r\n    buttonsContainer: {\r\n      padding: '0 5%',\r\n      marginRight: 100,\r\n      [theme.breakpoints.down('md')]: {\r\n        flexDirection: 'column'\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n        marginRight: 0\r\n      }\r\n    },\r\n    helperText: {\r\n      fontSize: 10,\r\n      textAlign: 'center',\r\n      [theme.breakpoints.down('md')]: {\r\n        marginBottom: 10\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  destination: string,\r\n  handlePercentDestination: (newDestination: string) => void\r\n}\r\n\r\nfunction PercentDestination({ destination, handlePercentDestination }: Props) {\r\n  const styles = useStyle();\r\n  const isDeposit = destination === DEPOSIT;\r\n  return (\r\n    <Box className={styles.container}>\r\n      <Typography className={styles.label}>\r\n        Проценти\r\n      </Typography>\r\n      <Box\r\n        className={styles.buttonsContainer}\r\n        display='flex'\r\n        flexGrow={1}\r\n        justifyContent='space-between'\r\n      >\r\n        <Box\r\n          display='flex'\r\n          flexDirection='column'\r\n        >\r\n          <Button \r\n            component='button'\r\n            variant= 'outlined'\r\n            color={isDeposit ? 'primary' : 'default'}\r\n            onClick={() => handlePercentDestination(DEPOSIT)}\r\n            startIcon={<Cash />}\r\n          >\r\n            До вкладу\r\n          </Button>\r\n          <Typography\r\n            className={styles.helperText}\r\n          >\r\n            Збільшується ефективна дохідність\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          display='flex'\r\n          flexDirection='column'\r\n        >\r\n        <Button\r\n          component='button'\r\n          variant='outlined'\r\n          color={!isDeposit ? 'primary' : 'default'}\r\n          onClick={() => handlePercentDestination('card')}\r\n          startIcon={<Card />}\r\n        >\r\n          На картку\r\n        </Button>\r\n        <Typography\r\n          className={styles.helperText}\r\n        >\r\n          Проценти можливо відразу витрачати\r\n        </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PercentDestination\r\n","import { createContext, useContext } from \"react\"\r\n\r\nexport interface IDeposit {\r\n  duration: number,\r\n  percent: number,\r\n  sum: number,\r\n  monthly: number,\r\n  withoutFirstMonth: boolean,\r\n  longation: number,\r\n  percentDestination: string\r\n}\r\n\r\nexport interface DepositDefaultContext{\r\n  deposit: IDeposit\r\n  setContextValue: (newDeposit: IDeposit) => void\r\n}\r\n\r\nexport const Deposit: IDeposit = {\r\n  duration: 4,\r\n  percent: 6,\r\n  sum: 100000,\r\n  monthly: 10000,\r\n  withoutFirstMonth: false,\r\n  longation: 0,\r\n  percentDestination: 'deposit'\r\n}\r\n\r\nexport const DepositContext = createContext<DepositDefaultContext>({\r\n  deposit: Deposit,\r\n  setContextValue: (newDeposit: IDeposit):void => {}\r\n})\r\n\r\nexport const useDepositContext = () => useContext<DepositDefaultContext>(DepositContext)","export const duration = [\r\n  {\r\n    value: 3,\r\n    label: '3',\r\n  },\r\n  {\r\n    value: 4,\r\n    label: '4',\r\n  },\r\n  {\r\n    value: 5,\r\n    label: '5',\r\n  },\r\n  {\r\n    value: 6,\r\n    label: '6',\r\n  },\r\n  {\r\n    value: 7,\r\n    label: '7',\r\n  },\r\n  {\r\n    value: 8,\r\n    label: '8',\r\n  },\r\n  {\r\n    value: 9,\r\n    label: '9',\r\n  },\r\n  {\r\n    value: 10,\r\n    label: '10',\r\n  },\r\n  {\r\n    value: 11,\r\n    label: '11',\r\n  },\r\n  {\r\n    value: 12,\r\n    label: '12',\r\n  }\r\n];\r\n\r\nexport const rates: any = {\r\n  '3': 60,\r\n  '4': 60,\r\n  '5': 60,\r\n  '6': 70,\r\n  '7': 70,\r\n  '8': 70,\r\n  '9': 75,\r\n  '10': 75,\r\n  '11': 75,\r\n  '12': 75\r\n};\r\n\r\nexport const longation = [\r\n  {\r\n    value: 1,\r\n    label: '1',\r\n  },\r\n  {\r\n    value: 2,\r\n    label: '2',\r\n  },\r\n  {\r\n    value: 3,\r\n    label: '3',\r\n  },\r\n  {\r\n    value: 4,\r\n    label: '4',\r\n  },\r\n  {\r\n    value: 5,\r\n    label: '5',\r\n  }\r\n];\r\n","export const uahFormatter = (number: number):string => {\r\n  const formatter = new Intl.NumberFormat('uk-UA', {\r\n    style: 'currency',\r\n    currency: 'UAH'\r\n  });\r\n  return formatter.format(number);\r\n}\r\n\r\nexport const decimalFormatter = (number: number):string => {\r\n  const formatter = new Intl.NumberFormat('uk-UA', {\r\n    style: 'decimal',\r\n  });\r\n  return formatter.format(number);\r\n}\r\n\r\nexport const stripNoneNumbers = (string: string):string => {\r\n  return string.replace(/[^0-9.]/g, '');\r\n}","import React from 'react'\r\nimport { \r\n Typography, Checkbox, FormControlLabel, Box\r\n} from '@material-ui/core'; \r\nimport { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport InputSlider from '../InputSlider/InputSlider';\r\nimport RateText from '../RateText/RateText';\r\nimport SliderLabel from '../SliderLabel/SliderLabel';\r\nimport TextInput from '../TextInput/TextInput';\r\nimport PercentDestination from '../PercentDestination/PercentDestination';\r\nimport { useDepositContext } from '../../context/DepositInputs';\r\nimport InfoIcon from '@material-ui/icons/InfoOutlined';\r\n\r\nimport { duration, rates, longation } from '../../mocks/depositRanks';\r\nimport { stripNoneNumbers } from '../../helpers/helpers';\r\nimport { MAX_DEPOSIT_SUM, MAX_LONGATIONS } from '../../config/constants';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    container: {\r\n      flexGrow: 1,\r\n      height: '100%',\r\n      paddingRight: 20,\r\n      [theme.breakpoints.down('sm')]: {\r\n        paddingRight: 0\r\n      }\r\n    },\r\n    marginLeft: {\r\n      marginLeft: 10\r\n    }\r\n  })\r\n);\r\n\r\nfunction DepositInputs() {\r\n  const styles = useStyles();\r\n  const { deposit, setContextValue } = useDepositContext();\r\n\r\n  const mergeContextValue = (field: string, value: number | boolean | string):void => {\r\n    setContextValue({\r\n      ...deposit,\r\n      [field]: value,\r\n    })\r\n  }\r\n\r\n  const handleRateChange = (e: React.ChangeEvent<HTMLInputElement>, value: number | number[]):void => {\r\n    const duration = typeof value === 'number' ? value : value[0];\r\n    setContextValue({\r\n      ...deposit,\r\n      duration,\r\n      percent: getRateByDuration(duration)\r\n    })\r\n  }\r\n\r\n  const handleSumChange = (e: React.ChangeEvent<HTMLInputElement>, value: number | number[]):void => {\r\n    const sum = typeof value === 'number' ? value : value[0];\r\n    mergeContextValue('sum', sum);\r\n  }\r\n\r\n  const normalizeSum = (sum: number) => {\r\n    let normalized = sum;\r\n    if (sum < 0 || isNaN(sum)) {\r\n      normalized = 0;\r\n    } else if ( sum > MAX_DEPOSIT_SUM) {\r\n      normalized = MAX_DEPOSIT_SUM;\r\n    }\r\n    return normalized;\r\n  }\r\n  \r\n  const handleMonthlyChange = (e: React.ChangeEvent, value: number | number[]):void => {\r\n    const monthly = typeof value === 'number' ? value : value[0];\r\n    mergeContextValue('monthly', monthly);\r\n  } \r\n  \r\n  const handleSumInputChange = (event: React.ChangeEvent<HTMLInputElement>):void => {\r\n    const sum = stripNoneNumbers(event.target.value);\r\n    mergeContextValue('sum', normalizeSum(parseInt(sum)));\r\n  }\r\n\r\n  const handleMonthlyInputChange = (event: React.ChangeEvent<HTMLInputElement>):void => {\r\n    const monthly = stripNoneNumbers(event.target.value)\r\n    mergeContextValue('monthly', normalizeSum(+monthly));\r\n  }\r\n\r\n  const handleCheckBox = (event: React.ChangeEvent<HTMLInputElement>):void => {\r\n    mergeContextValue('withoutFirstMonth', event.target.checked)\r\n  }\r\n\r\n  const getRateByDuration = (duration: number):number => rates[`${duration}`] / 10;\r\n\r\n  const handleLongationChange = (e: any, value: number | number[]):void => {\r\n    const longation = typeof value === 'number' ? value : value[0];\r\n    mergeContextValue('longation', longation);\r\n  } \r\n\r\n  const handlePercentDestination = (newDestination: string):void => {\r\n    mergeContextValue('percentDestination', newDestination)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typography variant='h6'>Стандарт строковий</Typography>\r\n      <InputSlider \r\n        value={deposit.duration}\r\n        handleChange={handleRateChange}\r\n        marks={duration}\r\n        rate={deposit.percent}\r\n        children={<RateText rate={`${deposit.percent} %`}/>}\r\n        label={<SliderLabel label={`Ставка (на рік)/ Строк (міс.)`} />}\r\n        valueDisplay=\"on\"\r\n        sliderOptions={{\r\n          'aria-labelledby': \"discrete-slider-custom\",\r\n          min: duration[0].value,\r\n          max: duration[duration.length - 1].value\r\n        }}\r\n      />\r\n      <InputSlider \r\n        value={deposit.sum}\r\n        handleChange={handleSumChange}\r\n        label={<SliderLabel label=\"Сума\" />}\r\n        children={<TextInput sum={deposit.sum} handleInputChange={handleSumInputChange} />}\r\n        valueDisplay=\"off\"\r\n        sliderOptions={{\r\n          'aria-labelledby': \"discrete-slider-custom\",\r\n          min: 0,\r\n          max: MAX_DEPOSIT_SUM\r\n        }}\r\n      />\r\n      <InputSlider \r\n        value={deposit.monthly}\r\n        handleChange={handleMonthlyChange}\r\n        label={<SliderLabel label=\"Щомісячне поповнення\" />}\r\n        children={<TextInput sum={deposit.monthly} handleInputChange={handleMonthlyInputChange} />}\r\n        valueDisplay=\"off\"\r\n        sliderOptions={{\r\n          'aria-labelledby': \"discrete-slider-custom\",\r\n          min: 0,\r\n          max: MAX_DEPOSIT_SUM\r\n        }}\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={deposit.withoutFirstMonth}\r\n            onChange={handleCheckBox}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Без поповнення в перший місяць\"\r\n      />\r\n      <InputSlider \r\n        value={deposit.longation}\r\n        marks={longation}\r\n        handleChange={handleLongationChange}\r\n        label={<SliderLabel label=\"Кількість продовжень\" />}\r\n        children={<RateText rate={`${deposit.longation}`}/>}\r\n        valueDisplay=\"off\"\r\n        sliderOptions={{\r\n          'aria-labelledby': \"discrete-slider-custom\",\r\n          min: 0,\r\n          max: MAX_LONGATIONS\r\n        }}\r\n      />\r\n      <PercentDestination\r\n        destination={deposit.percentDestination}\r\n        handlePercentDestination={handlePercentDestination} \r\n      />\r\n      <Box\r\n        display='flex'\r\n        flexDirection='row'\r\n        alignItems='center'\r\n        marginTop={2}\r\n      >\r\n        <InfoIcon\r\n          color='primary'\r\n        />\r\n        <Typography\r\n         className={styles.marginLeft}\r\n        >\r\n          Розрахунок процентів має довідковий характер\r\n        </Typography>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DepositInputs\r\n","import React from 'react'\r\nimport { Box, Typography, makeStyles } from '@material-ui/core';\r\n\r\ninterface Props {\r\n  label: string,\r\n  value: string,\r\n  valueBold?: boolean,\r\n  children?: React.ReactNode,\r\n  centered?: boolean\r\n}\r\n\r\nfunction InfoRow({ label, value, valueBold, children, centered }: Props) {\r\n  const useStyle = makeStyles({\r\n    label: {\r\n      display: 'flex',\r\n      flex: '1',\r\n      alignItems: 'center',\r\n      fontWeight: valueBold ? 600 : 400,\r\n      justifyContent: centered ? 'center' : 'start'\r\n    }\r\n   })\r\n  const styles = useStyle(); \r\n  return (\r\n    <Box\r\n      display='flex'\r\n      flexDirection='row'\r\n    >\r\n      <Typography\r\n        className={styles.label}\r\n      >\r\n        {label}\r\n        {children}\r\n      </Typography>\r\n      <Typography\r\n        className={styles.label}\r\n      >\r\n        {value}\r\n      </Typography>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default InfoRow\r\n","import React, { useState } from 'react'\r\nimport { Tooltip, makeStyles } from '@material-ui/core';\r\nimport Help from '@material-ui/icons/HelpOutline';\r\n\r\nconst useStyle = makeStyles({\r\n  ml: {\r\n    marginLeft: 8,\r\n    fontSize: 20,\r\n  }\r\n})\r\nfunction IconTooltip() {\r\n  const [ open, setOpen ] = useState(false);\r\n  const styles = useStyle();\r\n\r\n  const handleClick = () => {\r\n    if (!open) {\r\n      setOpen(true);\r\n      setTimeout( () => setOpen(false), 1000);\r\n    }\r\n  }\r\n  return (\r\n    <Tooltip\r\n      open={open}\r\n      title='Загальна ставка оподаткування 19,5 % (18% податок + 1,5 % військовий збір)'\r\n    >\r\n      <Help \r\n        className={styles.ml}\r\n        color='primary'\r\n        onClick={handleClick}\r\n      />\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\nexport default IconTooltip\r\n","import React, { useState } from 'react'\r\nimport { \r\n  Box, Collapse, Typography, makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircleOutlined';\r\nimport InfoRow from '../InfoRow/InfoRow';\r\n\r\ninterface Props {\r\n  pureProfit: string,\r\n  purePercent: number\r\n}\r\n\r\nfunction ProfitDetails({ pureProfit, purePercent }: Props) {\r\n  const [collapse, setCollapse] = useState(false);\r\n  const [duration, setDuration] = useState('1ms')\r\n\r\n  const useStyle = makeStyles({\r\n    container: {\r\n      marginBottom: 10\r\n    },\r\n    header: {\r\n      '&:hover': {\r\n        cursor: 'pointer'\r\n      }\r\n    },\r\n    bold: {\r\n      fontWeight: 600\r\n    },\r\n    \"@keyframes rotate\": {\r\n      \"0%\": {\r\n        transform: `rotateZ(${collapse ? '0' : '180deg'})`\r\n      },\r\n      \"100%\": {\r\n        transform: `rotateZ(${collapse ? '180deg' : '360deg'})`\r\n      }\r\n    },\r\n    arrow: {\r\n      fontSize: 20,\r\n      marginRight: 8,\r\n      transform: `rotateZ(${collapse ? '180deg' : '0'})`,\r\n      animation: `$rotate ${duration} ease-in-out`\r\n    }\r\n  })\r\n\r\n  const styles = useStyle();\r\n\r\n  const handleClick = () => {\r\n    setDuration('300ms');\r\n    setCollapse(!collapse);\r\n  }\r\n\r\n  return (\r\n    <Box  className={styles.container}>\r\n      <Box\r\n        onClick={handleClick}\r\n        display='flex'\r\n        alignItems='center'\r\n        className={styles.header}\r\n      >\r\n        <ArrowDropDownCircleIcon color='primary' className={styles.arrow} />\r\n        <Typography className={styles.bold}>\r\n          Після сплати податку\r\n        </Typography>\r\n      </Box>\r\n      <Collapse in={collapse}>\r\n        <InfoRow label='Проценти (дохід)' value={pureProfit} />\r\n        <InfoRow label='Процентна ставка' value={`${purePercent} % на рік`} />\r\n      </Collapse>\r\n    </Box>  \r\n  )\r\n}\r\n\r\nexport default ProfitDetails\r\n","import React from 'react'\r\nimport { Box } from '@material-ui/core';\r\nimport { VerticalRectSeries, FlexibleWidthXYPlot } from 'react-vis';\r\nimport InfoRow from '../InfoRow/InfoRow';\r\n\r\nimport { decimalFormatter } from '../../helpers/helpers'\r\n\r\ninterface Props {\r\n  sum: number,\r\n  monthlyTotal: number,\r\n  profit: number\r\n}\r\n\r\nfunction Charts({ sum, monthlyTotal, profit }: Props) {\r\n\r\n  const leftChartX = { x0: 0, x: 4 };\r\n  const rightChartX = { x0: 5, x: 9 };\r\n  const totalIncome = sum + monthlyTotal;\r\n  const totalRangeY = totalIncome + profit;\r\n\r\n  const rangeY = (value: number) => totalRangeY / 100 * value;\r\n  const firstBar = [{...leftChartX, y: rangeY(sum), y0: 0}, {...rightChartX, y: rangeY(sum), y0: 0}];\r\n  const secondBar = [{...leftChartX, y: rangeY(monthlyTotal), y0: 0}, {...rightChartX, y: rangeY(monthlyTotal), y0: 0}];\r\n  const thirdBar = [{...leftChartX, y: 0, y0: 0}, {...rightChartX, y: rangeY(profit), y0: 0}];\r\n\r\n  return (\r\n    <Box display='flex' flexDirection='column'>\r\n      <InfoRow \r\n        label='Вклав' \r\n        value='Отримано' \r\n        centered\r\n      />\r\n      <InfoRow \r\n        label={decimalFormatter(totalIncome)} \r\n        value={decimalFormatter(totalIncome + profit)} \r\n        valueBold \r\n        centered\r\n      />\r\n      <FlexibleWidthXYPlot height={300} stackBy=\"y\">\r\n        <VerticalRectSeries data={firstBar} color='darkgray' />\r\n        <VerticalRectSeries data={secondBar} color='#35322B' />\r\n        <VerticalRectSeries data={thirdBar}  color='#3f51b5' />\r\n      </FlexibleWidthXYPlot>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Charts\r\n","import React from 'react'\r\nimport { Box, Divider, Button } from '@material-ui/core'; \r\n import { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport { useDepositContext } from '../../context/DepositInputs';\r\nimport InfoRow from '../InfoRow/InfoRow';\r\nimport IconTooltip from '../IconTooltip/IconTooltip';\r\nimport ProfitDetails from '../ProfitDetails/ProfitDetails';\r\nimport Charts from '../Charts/Charts';\r\n\r\nimport { uahFormatter } from '../../helpers/helpers';\r\nimport { DEPOSIT, DEPOSIT_TAX } from '../../config/constants';\r\nimport Send from '@material-ui/icons/SendOutlined';\r\n\r\nfunction DepositCharts() {\r\n  const useStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n      container: {\r\n        paddingLeft: 20,\r\n        [theme.breakpoints.down('sm')]: {\r\n          paddingLeft: 0,\r\n          paddingTop: 20\r\n        }\r\n      },\r\n      mb: {\r\n        marginBottom: 20\r\n      },\r\n      buttonContainer: {\r\n        [theme.breakpoints.down('sm')]: {\r\n          display: 'flex',\r\n          justifyContent: 'center'\r\n        }\r\n      }\r\n    })\r\n  );\r\n  const styles = useStyles();\r\n  const { deposit } = useDepositContext();\r\n\r\n  const { \r\n    monthly, withoutFirstMonth, duration, percent, sum, percentDestination\r\n   } = deposit;\r\n\r\n  const monthlyTotal = () => withoutFirstMonth \r\n    ? monthly * ( duration - 1 ) \r\n    : monthly * duration\r\n  \r\n  const roundTwoSigns = (number: number) => Math.round(number * 100) / 100;\r\n\r\n  const sumProfit = new Array(duration)\r\n    .fill(0)\r\n    .reduce((acc) => { \r\n      const montlyProfit = roundTwoSigns(acc.sum * percent / 100 / 12);\r\n      const raisedSum = roundTwoSigns(acc.sum + monthly);\r\n      return {\r\n        sum: percentDestination === DEPOSIT ? raisedSum + montlyProfit : raisedSum,\r\n        profit: montlyProfit + acc.profit\r\n      }\r\n    } \r\n    , { \r\n      sum: withoutFirstMonth ? sum : sum + monthly, // counting raised sum starting first month\r\n      profit: 0 \r\n    }\r\n  );\r\n\r\n  const handleStartDeposit = () => alert('Є зайві гроші?');\r\n\r\n  const tax = sumProfit.profit * DEPOSIT_TAX;\r\n  const purePercent = percent - percent * DEPOSIT_TAX;\r\n  const pureProfit = uahFormatter(sumProfit.profit - tax);\r\n  return (\r\n    <Box \r\n      display='flex' \r\n      flex={1}\r\n      flexDirection='column'\r\n      className={styles.container}\r\n    >\r\n      <Charts \r\n        sum={sum}\r\n        monthlyTotal={monthlyTotal()}\r\n        profit={sumProfit.profit}\r\n      />\r\n      <Box>\r\n        <InfoRow label='Сума вкладу' value={uahFormatter(deposit.sum)} />\r\n        <InfoRow label='Сума поповнень' value={uahFormatter(monthlyTotal())} />\r\n        <InfoRow label='Процентна ставка' value={`${percent} % на рік`} />\r\n        <InfoRow label='Проценти (дохід)' value={uahFormatter(sumProfit.profit)} valueBold />\r\n        <InfoRow label='Податок' value={uahFormatter(tax)} children={<IconTooltip />} />\r\n        <ProfitDetails purePercent={purePercent} pureProfit={pureProfit} />\r\n        <Divider className={styles.mb} />\r\n        <Box className={styles.buttonContainer}>\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            startIcon={<Send />}\r\n            onClick={handleStartDeposit}\r\n          >\r\n            Оформити депозит\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default DepositCharts\r\n","import React from 'react'\r\nimport { \r\n  Paper, Divider, Container, Box \r\n} from '@material-ui/core'; \r\nimport { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport DepositInputs from '../DeposinInputs/DepositInputs';\r\nimport DepositCharts from '../DepositCharts/DepositCharts';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    container:{\r\n      display: 'flex',\r\n      flex: 1,\r\n      minHeight: '100vh',\r\n      backgroundColor: '#71a2b6'\r\n    },\r\n    paper: {\r\n      display: 'flex',\r\n      margin: '40px',\r\n      padding: '40px 20px',\r\n      flexGrow: 1,\r\n      backgroundColor: 'gray',\r\n      flexDirection: 'row',\r\n      [theme.breakpoints.down('sm')]: {\r\n        flexDirection: 'column',\r\n        margin: '10px 0'\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nfunction DepositCalc() {\r\n  \r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Box className={styles.container}>\r\n      <Container \r\n      maxWidth='lg'\r\n      >\r\n        <Paper\r\n          variant='elevation'\r\n          className={styles.paper}\r\n        >\r\n          <DepositInputs />\r\n          <Divider orientation='vertical' flexItem />\r\n          <DepositCharts />\r\n        </Paper>\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default DepositCalc\r\n","import React, { useState } from 'react';\r\nimport DepositCalc from './components/DepositCalc/DepositCalc';\r\nimport { DepositContext, Deposit, IDeposit } from './context/DepositInputs';\r\n\r\nfunction App() {\r\n  const [deposit, setState] = useState<IDeposit>({ ...Deposit });\r\n\r\n  const setContextValue = (newDeposit: IDeposit) => {\r\n    setState({ \r\n      ...deposit,\r\n      ...newDeposit,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <DepositContext.Provider value={{ deposit, setContextValue }}>\r\n      <DepositCalc />\r\n    </DepositContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}