{"version":3,"sources":["components/InputSlider/InputSlider.tsx","components/RateText/RateText.tsx","components/SliderLabel/SliderLabel.tsx","components/TextInput/TextInput.tsx","config/constants.tsx","components/PercentDestination/PercentDestination.tsx","context/DepositInputs.tsx","mocks/depositRanks.tsx","helpers/helpers.tsx","components/DeposinInputs/DepositInputs.tsx","components/InfoRow/InfoRow.tsx","components/IconTooltip/IconTooltip.tsx","components/ProfitDetails/ProfitDetails.tsx","components/Charts/Charts.tsx","components/DepositCharts/DepositCharts.tsx","components/DepositCalc/DepositCalc.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","slider","display","flexGrow","margin","padding","InputSlider","value","handleChange","marks","rate","label","sliderOptions","valueDisplay","children","styles","Box","flexDirection","alignItems","className","Slider","onChange","aria-labelledby","min","max","valueLabelDisplay","valueLabelFormat","useStyle","width","fontSize","fontWeight","minWidth","marginBottom","textAlign","RateText","Typography","root","paddingBottom","SliderLabel","component","input","TextInput","sum","handleInputChange","OutlinedInput","fullWidth","MAX_DEPOSIT_SUM","DEPOSIT","theme","createStyles","buttonsContainer","marginRight","breakpoints","down","helperText","PercentDestination","destination","handlePercentDestination","isDeposit","justifyContent","Button","variant","color","onClick","startIcon","Deposit","duration","percent","monthly","withoutFirstMonth","longation","percentDestination","DepositContext","createContext","deposit","setContextValue","useDepositContext","useContext","rates","uahFormatter","number","Intl","NumberFormat","style","currency","format","decimalFormatter","stripNoneNumbers","string","replace","container","height","paddingRight","marginLeft","DepositInputs","mergeContextValue","field","normalizeSum","normalized","isNaN","getRateByDuration","e","length","event","target","parseInt","FormControlLabel","control","Checkbox","checked","newDestination","marginTop","InfoRow","valueBold","flex","ml","IconTooltip","useState","open","setOpen","Tooltip","title","setTimeout","ProfitDetails","pureProfit","purePercent","collapse","setCollapse","setDuration","header","cursor","bold","transform","arrow","animation","Collapse","in","Charts","monthlyTotal","profit","leftChartX","x0","x","rightChartX","totalIncome","totalRangeY","rangeY","firstBar","y","y0","secondBar","thirdBar","stackBy","data","DepositCharts","mb","roundTwoSigns","Math","round","sumProfit","Array","fill","reduce","acc","montlyProfit","raisedSum","tax","paddingLeft","Divider","alert","paper","backgroundColor","DepositCalc","Container","maxWidth","Paper","orientation","flexItem","App","setState","Provider","newDeposit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfb56877.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\r\nimport { Slider, Box, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  slider: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    margin: '0 20px',\r\n    padding: '20px 0'\r\n  }\r\n})\r\n\r\ninterface Props {\r\n  value: number,\r\n  handleChange: (e: any, value: number | number[]) => void,\r\n  children?: ReactNode,\r\n  marks?: { value: number, label: string }[],\r\n  rate?: number,\r\n  label: ReactNode,\r\n  valueDisplay: 'on' | 'off',\r\n  sliderOptions: { min: number, max: number, 'aria-labelledby': string }\r\n}\r\n\r\nfunction InputSlider({ \r\n  value, handleChange, marks, rate, label, sliderOptions, valueDisplay, children=null \r\n}: Props) {\r\n\r\n  const styles = useStyles();\r\n  \r\n  const valueLabelFormat = () => rate;\r\n\r\n  return (\r\n    <Box\r\n      display='flex'\r\n      flexDirection='row'\r\n      alignItems='center'\r\n    >\r\n      {label}\r\n      <div className={styles.slider}>\r\n        <Slider \r\n          value={value} \r\n          onChange={handleChange}\r\n          aria-labelledby={sliderOptions['aria-labelledby']}\r\n          min={sliderOptions.min}\r\n          max={sliderOptions.max}\r\n          marks={marks}\r\n          valueLabelDisplay={valueDisplay}\r\n          valueLabelFormat={valueLabelFormat}\r\n        />\r\n      </div>\r\n      {children}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default InputSlider\r\n","import React from 'react'\r\nimport { makeStyles, Typography } from '@material-ui/core'; \r\n\r\nconst useStyle = makeStyles({\r\n  rate: {\r\n    width: 100,\r\n    fontSize: 20,\r\n    fontWeight: 800,\r\n    minWidth: '60px',\r\n    marginBottom: 20,\r\n    textAlign: 'center'\r\n  }\r\n});\r\n\r\ninterface RateTextProps {\r\n  rate: string\r\n}\r\n\r\nfunction RateText({ rate }: RateTextProps) {\r\n  const styles = useStyle();\r\n  return (\r\n    <Typography className={styles.rate}>\r\n      {rate}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport default RateText\r\n","import React from 'react'\r\nimport { Box, Typography, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 140,\r\n    paddingBottom: 10\r\n  }\r\n})\r\n\r\ninterface SliderLabelType {\r\n  label: string\r\n};\r\n\r\nfunction SliderLabel({ label }: SliderLabelType) {\r\n  const styles = useStyles();\r\n  return (\r\n    <Box className={styles.root}>\r\n      <Typography component='span'>\r\n        {label}\r\n      </Typography>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default SliderLabel\r\n","import React from 'react'\r\nimport { OutlinedInput, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles({\r\n  input: {\r\n    width: 100,\r\n    fontSize: 18\r\n  }\r\n})\r\ninterface Props {\r\n  sum: number,\r\n  handleInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\nfunction TextInput({ sum, handleInputChange }: Props ) {\r\n  const styles = useStyle();\r\n  return (\r\n    <OutlinedInput \r\n      className={styles.input}\r\n      value={sum}\r\n      fullWidth\r\n      onChange={handleInputChange}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TextInput\r\n","export const MAX_DEPOSIT_SUM = 1000000;\r\nexport const MAX_LONGATIONS = 5;\r\nexport const DEPOSIT = 'deposit';\r\nexport const DEPOSIT_TAX = 0.195;","import React from 'react'\r\nimport { Typography, Box, Button } from '@material-ui/core';\r\nimport { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Cash from '@material-ui/icons/AttachMoneySharp';\r\nimport Card from '@material-ui/icons/CreditCardSharp';\r\nimport { DEPOSIT } from '../../config/constants';\r\n\r\nconst useStyle = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    label: {\r\n      width: 140\r\n    },\r\n    buttonsContainer: {\r\n      padding: '0 5%',\r\n      marginRight: 100,\r\n      [theme.breakpoints.down('md')]: {\r\n        flexDirection: 'column'\r\n      }\r\n    },\r\n    helperText: {\r\n      fontSize: 10,\r\n      textAlign: 'center'\r\n    }\r\n  })\r\n);\r\n\r\ninterface Props {\r\n  destination: string,\r\n  handlePercentDestination: (newDestination: string) => void\r\n}\r\n\r\nfunction PercentDestination({ destination, handlePercentDestination }: Props) {\r\n  const styles = useStyle();\r\n  const isDeposit = destination === DEPOSIT;\r\n  return (\r\n    <Box\r\n      display='flex'\r\n      flexDirection='row'\r\n      alignItems='center'\r\n    >\r\n      <Typography className={styles.label}>\r\n        Проценти\r\n      </Typography>\r\n      <Box\r\n        className={styles.buttonsContainer}\r\n        display='flex'\r\n        flexGrow={1}\r\n        justifyContent='space-between'\r\n      >\r\n        <Box\r\n          display='flex'\r\n          flexDirection='column'\r\n        >\r\n          <Button \r\n            component='button'\r\n            variant= 'outlined'\r\n            color={isDeposit ? 'primary' : 'default'}\r\n            onClick={() => handlePercentDestination(DEPOSIT)}\r\n            startIcon={<Cash />}\r\n          >\r\n            До вкладу\r\n          </Button>\r\n          <Typography\r\n            className={styles.helperText}\r\n          >\r\n            Збільшується ефективна дохідність\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          display='flex'\r\n          flexDirection='column'\r\n        >\r\n        <Button\r\n          component='button'\r\n          variant='outlined'\r\n          color={!isDeposit ? 'primary' : 'default'}\r\n          onClick={() => handlePercentDestination('card')}\r\n          startIcon={<Card />}\r\n        >\r\n          На картку\r\n        </Button>\r\n        <Typography\r\n          className={styles.helperText}\r\n        >\r\n          Проценти можливо відразу витрачати\r\n        </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PercentDestination\r\n","import { createContext, useContext } from \"react\"\r\n\r\nexport const Deposit = {\r\n  duration: 4,\r\n  percent: 6,\r\n  sum: 100000,\r\n  monthly: 10000,\r\n  withoutFirstMonth: false,\r\n  longation: 0,\r\n  percentDestination: 'deposit'\r\n}\r\n\r\nexport type DepositDefaultContext = {\r\n  deposit: typeof Deposit,\r\n  setContextValue: (newDeposit: typeof Deposit) => void\r\n}\r\n\r\nexport const DepositContext = createContext<DepositDefaultContext>({\r\n  deposit: Deposit,\r\n  setContextValue: () => {}\r\n})\r\nexport const useDepositContext = () => useContext(DepositContext)","export const duration = [\r\n  {\r\n    value: 3,\r\n    label: '3',\r\n  },\r\n  {\r\n    value: 4,\r\n    label: '4',\r\n  },\r\n  {\r\n    value: 5,\r\n    label: '5',\r\n  },\r\n  {\r\n    value: 6,\r\n    label: '6',\r\n  },\r\n  {\r\n    value: 7,\r\n    label: '7',\r\n  },\r\n  {\r\n    value: 8,\r\n    label: '8',\r\n  },\r\n  {\r\n    value: 9,\r\n    label: '9',\r\n  },\r\n  {\r\n    value: 10,\r\n    label: '10',\r\n  },\r\n  {\r\n    value: 11,\r\n    label: '11',\r\n  },\r\n  {\r\n    value: 12,\r\n    label: '12',\r\n  }\r\n];\r\n\r\nexport const rates: any = {\r\n  '3': 60,\r\n  '4': 60,\r\n  '5': 60,\r\n  '6': 70,\r\n  '7': 70,\r\n  '8': 70,\r\n  '9': 75,\r\n  '10': 75,\r\n  '11': 75,\r\n  '12': 75\r\n};\r\n\r\nexport const longation = [\r\n  {\r\n    value: 1,\r\n    label: '1',\r\n  },\r\n  {\r\n    value: 2,\r\n    label: '2',\r\n  },\r\n  {\r\n    value: 3,\r\n    label: '3',\r\n  },\r\n  {\r\n    value: 4,\r\n    label: '4',\r\n  },\r\n  {\r\n    value: 5,\r\n    label: '5',\r\n  }\r\n];\r\n","export const uahFormatter = (number: number) => {\r\n  const formatter = new Intl.NumberFormat('uk-UA', {\r\n    style: 'currency',\r\n    currency: 'UAH'\r\n  });\r\n  return formatter.format(number);\r\n}\r\n\r\nexport const decimalFormatter = (number: number) => {\r\n  const formatter = new Intl.NumberFormat('uk-UA', {\r\n    style: 'decimal',\r\n  });\r\n  return formatter.format(number);\r\n}\r\n\r\nexport const stripNoneNumbers = (string: string) => {\r\n  return string.replace(/[^0-9.]/g, '');\r\n}","import React from 'react'\r\nimport { \r\n  makeStyles, Typography, Checkbox, FormControlLabel, Box\r\n} from '@material-ui/core'; \r\nimport InputSlider from '../InputSlider/InputSlider';\r\nimport RateText from '../RateText/RateText';\r\nimport SliderLabel from '../SliderLabel/SliderLabel';\r\nimport TextInput from '../TextInput/TextInput';\r\nimport PercentDestination from '../PercentDestination/PercentDestination';\r\nimport { useDepositContext } from '../../context/DepositInputs';\r\nimport InfoIcon from '@material-ui/icons/InfoOutlined';\r\n\r\nimport { duration, rates, longation } from '../../mocks/depositRanks';\r\nimport { stripNoneNumbers } from '../../helpers/helpers';\r\nimport { MAX_DEPOSIT_SUM, MAX_LONGATIONS } from '../../config/constants';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    flexGrow: 1,\r\n    height: '100%',\r\n    paddingRight: 20\r\n  },\r\n  marginLeft: {\r\n    marginLeft: 10\r\n  }\r\n});\r\n\r\nfunction DepositInputs() {\r\n  const styles = useStyles();\r\n  const { deposit, setContextValue } = useDepositContext();\r\n\r\n  const mergeContextValue = (field: string, value: number | boolean | string) => {\r\n    setContextValue({\r\n      ...deposit,\r\n      [field]: value\r\n    })\r\n  }\r\n\r\n  const handleRateChange = (e: any, value: number | number[]) => {\r\n    const duration = typeof value === 'number' ? value : value[0];\r\n    setContextValue({\r\n      ...deposit,\r\n      duration,\r\n      percent: getRateByDuration(duration)\r\n    })\r\n  }\r\n\r\n  const handleSumChange = (e: any, value: number | number[]) => {\r\n    const sum = typeof value === 'number' ? value : value[0];\r\n    mergeContextValue('sum', sum);\r\n  }\r\n\r\n  const normalizeSum = (sum: number) => {\r\n    let normalized = sum;\r\n    if (sum < 0 || isNaN(sum)) {\r\n      normalized = 0;\r\n    } else if ( sum > MAX_DEPOSIT_SUM) {\r\n      normalized = MAX_DEPOSIT_SUM;\r\n    }\r\n    return normalized;\r\n  }\r\n  \r\n  const handleMonthlyChange = (e: any, value: number | number[]) => {\r\n    const monthly = typeof value === 'number' ? value : value[0];\r\n    mergeContextValue('monthly', monthly);\r\n  } \r\n  \r\n  const handleSumInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const sum = stripNoneNumbers(event.target.value);\r\n    mergeContextValue('sum', normalizeSum(parseInt(sum)));\r\n  }\r\n\r\n  const handleMonthlyInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const monthly = stripNoneNumbers(event.target.value)\r\n    mergeContextValue('monthly', normalizeSum(+monthly));\r\n  }\r\n\r\n  const handleCheckBox = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    mergeContextValue('withoutFirstMonth', event.target.checked)\r\n  }\r\n\r\n  const getRateByDuration = (duration: number) => rates[`${duration}`] / 10;\r\n\r\n  const handleLongationChange = (e: any, value: number | number[]) => {\r\n    const longation = typeof value === 'number' ? value : value[0];\r\n    mergeContextValue('longation', longation);\r\n  } \r\n\r\n  const handlePercentDestination = (newDestination: string) => {\r\n    mergeContextValue('percentDestination', newDestination)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typography variant='h6'>Стандарт строковий</Typography>\r\n      <InputSlider \r\n        value={deposit.duration}\r\n        handleChange={handleRateChange}\r\n        marks={duration}\r\n        rate={deposit.percent}\r\n        children={<RateText rate={`${deposit.percent} %`}/>}\r\n        label={<SliderLabel label={`Ставка (на рік)/ Строк (міс.)`} />}\r\n        valueDisplay=\"on\"\r\n        sliderOptions={{\r\n          'aria-labelledby': \"discrete-slider-custom\",\r\n          min: duration[0].value,\r\n          max: duration[duration.length - 1].value\r\n        }}\r\n      />\r\n      <InputSlider \r\n        value={deposit.sum}\r\n        handleChange={handleSumChange}\r\n        label={<SliderLabel label=\"Сума\" />}\r\n        children={<TextInput sum={deposit.sum} handleInputChange={handleSumInputChange} />}\r\n        valueDisplay=\"off\"\r\n        sliderOptions={{\r\n          'aria-labelledby': \"discrete-slider-custom\",\r\n          min: 0,\r\n          max: MAX_DEPOSIT_SUM\r\n        }}\r\n      />\r\n      <InputSlider \r\n        value={deposit.monthly}\r\n        handleChange={handleMonthlyChange}\r\n        label={<SliderLabel label=\"Щомісячне поповнення\" />}\r\n        children={<TextInput sum={deposit.monthly} handleInputChange={handleMonthlyInputChange} />}\r\n        valueDisplay=\"off\"\r\n        sliderOptions={{\r\n          'aria-labelledby': \"discrete-slider-custom\",\r\n          min: 0,\r\n          max: MAX_DEPOSIT_SUM\r\n        }}\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={deposit.withoutFirstMonth}\r\n            onChange={handleCheckBox}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Без поповнення в перший місяць\"\r\n      />\r\n       <InputSlider \r\n        value={deposit.longation}\r\n        marks={longation}\r\n        handleChange={handleLongationChange}\r\n        label={<SliderLabel label=\"Кількість продовжень\" />}\r\n        children={<RateText rate={`${deposit.longation}`}/>}\r\n        valueDisplay=\"off\"\r\n        sliderOptions={{\r\n          'aria-labelledby': \"discrete-slider-custom\",\r\n          min: 0,\r\n          max: MAX_LONGATIONS\r\n        }}\r\n      />\r\n      <PercentDestination\r\n        destination={deposit.percentDestination}\r\n        handlePercentDestination={handlePercentDestination} \r\n      />\r\n      <Box\r\n        display='flex'\r\n        flexDirection='row'\r\n        alignItems='center'\r\n        marginTop={2}\r\n      >\r\n        <InfoIcon\r\n          color='primary'\r\n        />\r\n        <Typography\r\n         className={styles.marginLeft}\r\n        >\r\n          Розрахунок процентів має довідковий характер\r\n        </Typography>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DepositInputs\r\n","import React from 'react'\r\nimport { Box, Typography, makeStyles } from '@material-ui/core';\r\n\r\ninterface Props {\r\n  label: string,\r\n  value: string,\r\n  valueBold?: boolean,\r\n  children?: React.ReactChild\r\n}\r\n\r\nfunction InfoRow({ label, value, valueBold, children }: Props) {\r\n  const useStyle = makeStyles({\r\n    label: {\r\n      display: 'flex',\r\n      flex: '1',\r\n      alignItems: 'center',\r\n      fontWeight: valueBold ? 600 : 400\r\n    }\r\n   })\r\n  const styles = useStyle(); \r\n  return (\r\n    <Box\r\n      display='flex'\r\n      flexDirection='row'\r\n    >\r\n      <Typography\r\n        className={styles.label}\r\n      >\r\n        {label}\r\n        {children}\r\n      </Typography>\r\n      <Typography\r\n        className={styles.label}\r\n      >\r\n        {value}\r\n      </Typography>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default InfoRow\r\n","import React, { useState } from 'react'\r\nimport { Tooltip, makeStyles } from '@material-ui/core';\r\nimport Help from '@material-ui/icons/HelpOutline';\r\n\r\nconst useStyle = makeStyles({\r\n  ml: {\r\n    marginLeft: 8,\r\n    fontSize: 20,\r\n  }\r\n})\r\nfunction IconTooltip() {\r\n  const [ open, setOpen ] = useState(false);\r\n  const styles = useStyle();\r\n\r\n  const handleClick = () => {\r\n    if (!open) {\r\n      setOpen(true);\r\n      setTimeout( () => setOpen(false), 1000);\r\n    }\r\n  }\r\n  return (\r\n    <Tooltip\r\n      open={open}\r\n      title='Загальна ставка оподаткування 19,5 % (18% податок + 1,5 % військовий збір)'\r\n    >\r\n      <Help \r\n        className={styles.ml}\r\n        color='primary'\r\n        onClick={handleClick}\r\n      />\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\nexport default IconTooltip\r\n","import React, { useState } from 'react'\r\nimport { \r\n  Box, Collapse, Typography, makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircleOutlined';\r\nimport InfoRow from '../InfoRow/InfoRow';\r\n\r\ninterface Props {\r\n  pureProfit: string,\r\n  purePercent: number\r\n}\r\n\r\nfunction ProfitDetails({ pureProfit, purePercent }: Props) {\r\n  const [collapse, setCollapse] = useState(false);\r\n  const [duration, setDuration] = useState('1ms')\r\n\r\n  const useStyle = makeStyles({\r\n    container: {\r\n      marginBottom: 10\r\n    },\r\n    header: {\r\n      '&:hover': {\r\n        cursor: 'pointer'\r\n      }\r\n    },\r\n    bold: {\r\n      fontWeight: 600\r\n    },\r\n    \"@keyframes rotate\": {\r\n      \"0%\": {\r\n        transform: `rotateZ(${collapse ? '0' : '180deg'})`\r\n      },\r\n      \"100%\": {\r\n        transform: `rotateZ(${collapse ? '180deg' : '360deg'})`\r\n      }\r\n    },\r\n    arrow: {\r\n      fontSize: 20,\r\n      marginRight: 8,\r\n      transform: `rotateZ(${collapse ? '180deg' : '0'})`,\r\n      animation: `$rotate ${duration} ease-in-out`\r\n    }\r\n  })\r\n\r\n  const styles = useStyle();\r\n\r\n  const handleClick = () => {\r\n    setDuration('300ms');\r\n    setCollapse(!collapse);\r\n  }\r\n\r\n  return (\r\n    <Box  className={styles.container}>\r\n      <Box\r\n        onClick={handleClick}\r\n        display='flex'\r\n        alignItems='center'\r\n        className={styles.header}\r\n      >\r\n        <ArrowDropDownCircleIcon color='primary' className={styles.arrow} />\r\n        <Typography className={styles.bold}>\r\n          Після сплати податку\r\n        </Typography>\r\n      </Box>\r\n      <Collapse in={collapse}>\r\n        <InfoRow label='Проценти (дохід)' value={pureProfit} />\r\n        <InfoRow label='Процентна ставка' value={`${purePercent} % на рік`} />\r\n      </Collapse>\r\n    </Box>  \r\n  )\r\n}\r\n\r\nexport default ProfitDetails\r\n","import React from 'react'\r\nimport { Box } from '@material-ui/core';\r\nimport { VerticalRectSeries, FlexibleWidthXYPlot } from 'react-vis';\r\nimport InfoRow from '../InfoRow/InfoRow';\r\n\r\nimport { decimalFormatter } from '../../helpers/helpers'\r\n\r\ninterface Props {\r\n  sum: number,\r\n  monthlyTotal: number,\r\n  profit: number\r\n}\r\n\r\nfunction Charts({ sum, monthlyTotal, profit }: Props) {\r\n\r\n  const leftChartX = { x0: 0, x: 4 };\r\n  const rightChartX = { x0: 5, x: 9 };\r\n  const totalIncome = sum + monthlyTotal;\r\n  const totalRangeY = totalIncome + profit;\r\n\r\n  const rangeY = (value: number) => totalRangeY / 100 * value;\r\n  const firstBar = [{...leftChartX, y: rangeY(sum), y0: 0}, {...rightChartX, y: rangeY(sum), y0: 0}];\r\n  const secondBar = [{...leftChartX, y: rangeY(monthlyTotal), y0: 0}, {...rightChartX, y: rangeY(monthlyTotal), y0: 0}];\r\n  const thirdBar = [{...leftChartX, y: 0, y0: 0}, {...rightChartX, y: rangeY(profit), y0: 0}];\r\n\r\n  return (\r\n    <Box display='flex' flexDirection='column'>\r\n      <InfoRow label='Вклав' value='Отримано' />\r\n      <InfoRow \r\n        label={decimalFormatter(totalIncome)} \r\n        value={decimalFormatter(totalIncome + profit)} \r\n        valueBold \r\n      />\r\n      <FlexibleWidthXYPlot height={300} stackBy=\"y\">\r\n        <VerticalRectSeries data={firstBar} color='darkgray' />\r\n        <VerticalRectSeries data={secondBar} color='#35322B' />\r\n        <VerticalRectSeries data={thirdBar}  color='#3f51b5' />\r\n      </FlexibleWidthXYPlot>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Charts\r\n","import React from 'react'\r\nimport { \r\n  Box, Divider, makeStyles, Button\r\n } from '@material-ui/core'; \r\nimport { useDepositContext } from '../../context/DepositInputs';\r\nimport InfoRow from '../InfoRow/InfoRow';\r\nimport IconTooltip from '../IconTooltip/IconTooltip';\r\nimport ProfitDetails from '../ProfitDetails/ProfitDetails';\r\nimport Charts from '../Charts/Charts';\r\n\r\nimport { uahFormatter } from '../../helpers/helpers';\r\nimport { DEPOSIT, DEPOSIT_TAX } from '../../config/constants';\r\nimport Send from '@material-ui/icons/SendOutlined';\r\n\r\nfunction DepositCharts() {\r\n  const useStyles = makeStyles({\r\n    mb: {\r\n      marginBottom: 20\r\n    }\r\n  });\r\n  const styles = useStyles();\r\n  const { deposit } = useDepositContext();\r\n\r\n  const { \r\n    monthly, withoutFirstMonth, duration, percent, sum, percentDestination\r\n   } = deposit;\r\n\r\n  const monthlyTotal = () => withoutFirstMonth \r\n    ? monthly * ( duration - 1 ) \r\n    : monthly * duration\r\n  \r\n  const roundTwoSigns = (number: number) => Math.round(number * 100) / 100;\r\n\r\n  const sumProfit = new Array(duration)\r\n    .fill(0)\r\n    .reduce((acc) => { \r\n      const montlyProfit = roundTwoSigns(acc.sum * percent / 100 / 12);\r\n      const raisedSum = roundTwoSigns(acc.sum + monthly);\r\n      return {\r\n        sum: percentDestination === DEPOSIT ? raisedSum + montlyProfit : raisedSum,\r\n        profit: montlyProfit + acc.profit\r\n      }\r\n    } \r\n    , { \r\n      sum: withoutFirstMonth ? sum : sum + monthly, // counting raised sum starting first month\r\n      profit: 0 \r\n    }\r\n  );\r\n\r\n  const handleStartDeposit = () => alert('Є зайві гроші?');\r\n\r\n  const tax = sumProfit.profit * DEPOSIT_TAX;\r\n  const purePercent = percent - percent * DEPOSIT_TAX;\r\n  const pureProfit = uahFormatter(sumProfit.profit - tax);\r\n  return (\r\n    <Box \r\n      display='flex' \r\n      paddingLeft='20px'\r\n      flex={1}\r\n      flexDirection='column'\r\n    >\r\n      <Charts \r\n        sum={sum}\r\n        monthlyTotal={monthlyTotal()}\r\n        profit={sumProfit.profit}\r\n      />\r\n      <Box>\r\n        <InfoRow label='Сума вкладу' value={uahFormatter(deposit.sum)} />\r\n        <InfoRow label='Сума поповнень' value={uahFormatter(monthlyTotal())} />\r\n        <InfoRow label='Процентна ставка' value={`${percent} % на рік`} />\r\n        <InfoRow label='Проценти (дохід)' value={uahFormatter(sumProfit.profit)} valueBold />\r\n        <InfoRow label='Податок' value={uahFormatter(tax)} children={<IconTooltip />} />\r\n        <ProfitDetails purePercent={purePercent} pureProfit={pureProfit} />\r\n        <Divider className={styles.mb} />\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          startIcon={<Send />}\r\n          onClick={handleStartDeposit}\r\n        >\r\n          Оформити депозит\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default DepositCharts\r\n","import React from 'react'\r\nimport { Paper, Divider, Container } from '@material-ui/core'; \r\nimport { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport DepositInputs from '../DeposinInputs/DepositInputs';\r\nimport DepositCharts from '../DepositCharts/DepositCharts';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    paper: {\r\n      display: 'flex',\r\n      margin: '40px',\r\n      padding: '40px 20px',\r\n      flexGrow: 1,\r\n      backgroundColor: 'gray',\r\n      flexDirection: 'row',\r\n      [theme.breakpoints.down('sm')]: {\r\n        flexDirection: 'column'\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nfunction DepositCalc() {\r\n  \r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Container \r\n     maxWidth='lg'\r\n    >\r\n      <Paper\r\n        variant='elevation'\r\n        className={styles.paper}\r\n      >\r\n        <DepositInputs />\r\n        <Divider orientation='vertical' flexItem />\r\n        <DepositCharts />\r\n      </Paper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default DepositCalc\r\n","import React, { useState } from 'react';\nimport DepositCalc from './components/DepositCalc/DepositCalc';\nimport { DepositContext, Deposit } from './context/DepositInputs';\n\nfunction App() {\n  const [deposit, setState] = useState({ ...Deposit });\n\n  const setContextValue = (newDeposit: typeof Deposit) => {\n    setState({ \n      ...deposit,\n      ...newDeposit\n    });\n  }\n\n  return (\n    <DepositContext.Provider value={{ deposit, setContextValue }}>\n      <DepositCalc />\n    </DepositContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}